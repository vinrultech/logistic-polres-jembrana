version: '3'

networks:
  docker_network:

services:
  golang:
    build:
      context: ./backend
      dockerfile: golang.dockerfile
    container_name: golang
    ports:
      - "1331:1331"
    working_dir: /app
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
    networks:
      - docker_network
    entrypoint: ['CompileDaemon', '-directory=./', '-recursive=true', '--build=go build main.go', '--command=./main']
  vue:
    build:
      context: ./frontend
      dockerfile: vue.dockerfile
    ports:
      - "8080:8080"
    container_name: vue
    working_dir: /usr/src/app/frontend
    volumes:
       - ./frontend:/usr/src/app/frontend
       - /usr/src/app/frontend/node_modules
    depends_on:
      - golang
    networks:
      - docker_network
    entrypoint: ['npm', 'run', 'serve']

  postgres:
    image: postgres:10-alpine
    container_name: postgres
    restart: unless-stopped
    tty: true
    environment:
      POSTGRES_PASSWORD: polres_123456_log_surat
      POSTGRES_USER: polres_log_user_surat
      POSTGRES_DB: polres_log_surat_db
    networks:
      - docker_network
    volumes:
      - ./postgres:/var/lib/postgresql/data
  
  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - docker_network
    depends_on:
      - postgres
  go:
    build:
      context: ./backend
      dockerfile: golang.dockerfile
    container_name: go
    working_dir: /app
    volumes:
      - ./backend:/app
    depends_on:
      - golang
    networks:
      - docker_network
    entrypoint: ['go']
  npm:
    build:
      context: ./frontend
      dockerfile: vue.dockerfile
    container_name: npm
    working_dir: /usr/src/app/frontend
    volumes:
       - ./frontend:/usr/src/app/frontend
       - /usr/src/app/frontend/node_modules
    depends_on:
      - vue
    networks:
      - docker_network
    entrypoint: ['npm']


  
